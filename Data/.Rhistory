kidAmbigStairs <- ambig[,c(ambigEnd:ambigStart)]
kidAmbigStairs <- kidAmbigStairs[with(kidAmbigStairs, order(RA0_6, RA1_5, RA2_4, RA3_3, RA4_2, RA5_1, RA6_0)),]
colnames(kidAmbigStairs) <- c("0/6", "1/6", "2/6", "3/6", "4/6", "5/6", "6/6")
kidAmbigStairs <- kidAmbigStairs == 1
row.names(kidAmbigStairs) <- 30:1
test.m <- melt(kidAmbigStairs)
p <- ggplot(test.m, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "black"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=12)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
ggtitle("All children, all trials") + theme(plot.title=element_text(face="bold", size=16)) +
labs(x="P(Risk)", y="Participant Number") + theme(axis.title=element_text(size=12)) +
theme(axis.text=element_text(size=10)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))
print(p)
ambig4logit <- ambig[,ambigStart:ambigEnd]
colnames(ambig4logit) <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
ambig4logit <- melt(ambig4logit)
colnames(ambig4logit) <- c("PRisk", "ChoseRisk")
allAmbigAtt <- data.frame(colMeans(ambig[,ambigStart:ambigEnd]))
colnames(allAmbigAtt) <- "PropChoseRisk"
allAmbigAtt$PRisk <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
allAmbigAtt <- data.frame(allAmbigAtt)
p <- ggplot(allAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() + theme_classic() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme(plot.title = element_text(face="bold", size = 16)) + ggtitle("Children: Proportion chose risky by P(Risk)") +
theme(axis.title=element_text(size=12)) + theme(axis.text=element_text(size=10))
print(p)
require(gtable)
test.m2 <- test.m
p1 <- ggplot(test.m2, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "grey70"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=16)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
labs(x="Risky P(Win)", y="Participant number") + theme(axis.title=element_text(size=20)) +
theme(axis.text=element_text(size=16)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))+ theme(plot.margin = unit(c(1,2,1,2), "lines"))
p2 <- ggplot(allAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme_classic() %+replace% theme(panel.background = element_rect(fill = NA)) +
theme(axis.title.y=element_text(angle = 270)) +
theme(axis.title=element_text(size=20)) + theme(axis.text=element_text(size=16)) +
labs(y = "Proportion chose risky")
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g <- gtable_add_grob(g, g2$grob[[7]], pp$t, length(g$widths), pp$b)
grid.draw(g)
require(gtable)
test.m2 <- test.m
p1 <- ggplot(test.m2, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "grey70"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=16)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
labs(x="Risky P(Win)", y="Participant number") + theme(axis.title=element_text(size=20)) +
theme(axis.text=element_text(size=16)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))+ theme(plot.margin = unit(c(1,2,1,2), "lines"))
p2 <- ggplot(allAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme_classic() %+replace% theme(panel.background = element_rect(fill = NA)) +
theme(axis.title.y=element_text(angle = 270)) +
theme(axis.title=element_text(size=20)) + theme(axis.text=element_text(size=16)) +
labs(y = "Proportion chose risky")
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g <- gtable_add_grob(g, g2$grob[[7]], pp$t, length(g$widths), pp$b)
grid.draw(g)
grid.draw(g)
g
require(gtable)
test.m2 <- test.m
p1 <- ggplot(test.m2, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "grey70"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=16)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
labs(x="Risky P(Win)", y="Participant number") + theme(axis.title=element_text(size=20)) +
theme(axis.text=element_text(size=16)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))+ theme(plot.margin = unit(c(1,2,1,2), "lines"))
p2 <- ggplot(allAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme_classic() %+replace% theme(panel.background = element_rect(fill = NA)) +
theme(axis.title.y=element_text(angle = 270)) +
theme(axis.title=element_text(size=20)) + theme(axis.text=element_text(size=16)) +
labs(y = "Proportion chose risky")
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
test.m2 <- test.m
p1 <- ggplot(test.m2, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "grey70"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=16)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
labs(x="Risky P(Win)", y="Participant number") + theme(axis.title=element_text(size=20)) +
theme(axis.text=element_text(size=16)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))+ theme(plot.margin = unit(c(1,2,1,2), "lines"))
p2 <- ggplot(allAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme_classic() %+replace% theme(panel.background = element_rect(fill = NA)) +
theme(axis.title.y=element_text(angle = 270)) +
theme(axis.title=element_text(size=20)) + theme(axis.text=element_text(size=16)) +
labs(y = "Proportion chose risky")
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g <- gtable_add_grob(g, g2$grob[[7]], pp$t, length(g$widths), pp$b)
grid.draw(g)
list
list
rm(list = ls())
require(ggplot2)
require(grid)
require(dplyr)
demo <- read.csv("./Demographics.csv")
demo$DOB <- as.Date(demo$DOB, '%m/%d/%y')
demo$Date <- as.Date(demo$Date, '%m/%d/%y')
demo$age <- as.numeric(difftime(demo$Date, demo$DOB, units = "days"))/365.25
demoKeep <- demo[,c("i", "age", "Gender")]
ambig <- read.csv("./AmbigRaw.csv")
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigStart2 <- which(colnames(ambig) == "RA5_1")
ambigEnd2 <- which(colnames(ambig) == "RA1_5")
ambig$PChoseRisk2 <- rowMeans(ambig[,ambigStart2:ambigEnd2]) #ignores 100% win/lose risk
ambigKeep <- ambig[,c("i", "PChoseRisk")]
allData <- merge(ambigKeep, demoKeep, by="i", sort=T)
allData$X <- NULL
fails <- ambig$P3 == 0
ambig <- ambig[!fails,]
allData <- allData[!fails,]
require(reshape2)
kidAmbigStairs <- ambig[,c(ambigEnd:ambigStart)]
kidAmbigStairs <- kidAmbigStairs[with(kidAmbigStairs, order(RA0_6, RA1_5, RA2_4, RA3_3, RA4_2, RA5_1, RA6_0)),]
colnames(kidAmbigStairs) <- c("0/6", "1/6", "2/6", "3/6", "4/6", "5/6", "6/6")
kidAmbigStairs <- kidAmbigStairs == 1
row.names(kidAmbigStairs) <- 30:1
test.m <- melt(kidAmbigStairs)
p <- ggplot(test.m, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "black"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=12)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
ggtitle("All children, all trials") + theme(plot.title=element_text(face="bold", size=16)) +
labs(x="P(Risk)", y="Participant Number") + theme(axis.title=element_text(size=12)) +
theme(axis.text=element_text(size=10)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))
print(p)
ambig4logit <- ambig[,ambigStart:ambigEnd]
colnames(ambig4logit) <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
ambig4logit <- melt(ambig4logit)
colnames(ambig4logit) <- c("PRisk", "ChoseRisk")
allAmbigAtt <- data.frame(colMeans(ambig[,ambigStart:ambigEnd]))
colnames(allAmbigAtt) <- "PropChoseRisk"
allAmbigAtt$PRisk <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
allAmbigAtt <- data.frame(allAmbigAtt)
p <- ggplot(allAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() + theme_classic() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme(plot.title = element_text(face="bold", size = 16)) + ggtitle("Children: Proportion chose risky by P(Risk)") +
theme(axis.title=element_text(size=12)) + theme(axis.text=element_text(size=10))
print(p)
require(gtable)
test.m2 <- test.m
p1 <- ggplot(test.m2, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "grey70"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=16)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
labs(x="Risky P(Win)", y="Participant number") + theme(axis.title=element_text(size=20)) +
theme(axis.text=element_text(size=16)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))+ theme(plot.margin = unit(c(1,2,1,2), "lines"))
p2 <- ggplot(allAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme_classic() %+replace% theme(panel.background = element_rect(fill = NA)) +
theme(axis.title.y=element_text(angle = 270)) +
theme(axis.title=element_text(size=20)) + theme(axis.text=element_text(size=16)) +
labs(y = "Proportion chose risky")
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax$widths <- rev(ax$widths)
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g <- gtable_add_grob(g, g2$grob[[7]], pp$t, length(g$widths), pp$b)
grid.draw(g)
grid.draw(g)
load("/AdultData.R")
getwd()
load("./AdultData.R")
View(allAmbigAtt)
View(ambig)
adults <- data.frame(data$allAdultsAmbig)
View(adults)
adults <- adults[,c(1,2,6,7,11)] #keep only pertinent columns
colnames(adults) <- c("i", "cond", "PRisk", "PAmbig", "ChoseAmbig")
adults[adults$cond==2, "PRisk"] <- 100 - adults[adults$cond==2, "PRisk"]
demo <- read.csv("./AdultDemo.csv", stringsAsFactors = F)
rm(list = ls())
demo <- read.csv("./AdultDemo.csv", stringsAsFactors = F)
View(demo)
rm(list = ls())
require(ggplot2)
require(grid)
require(dplyr)
demo <- read.csv("./AdultDemo.csv", stringsAsFactors = F)
View(demo)
rm(list = ls())
require(ggplot2)
require(grid)
require(dplyr)
demo <- read.csv("./AdultDemo.csv", stringsAsFactors = F)
demo$DOB <- as.Date(demo$QID2_TEXT, '%m/%d/%y')
demo$Date <- as.Date(demo$startDate, '%m/%d/%y')
demo$age <- as.numeric(difftime(demo$Date, demo$DOB, units = "days"))/365.25
names(demo)[names(demo) == 'QID1_TEXT'] <- 'i'
names(demo)[names(demo) == 'QID3'] <- 'Gender'
View(demo)
demoKeep <- demo[,c(age", "Gender")]
demoKeep <- demo[,c("age", "Gender")]
demoKeep$Gender[demoKeep$Gender == 'Male'] <- "M"
demoKeep$Gender[demoKeep$Gender == 'Female'] <- "F"
demoKeep <- demo[,c("age", "Gender")]
demoKeep$Gender[demoKeep$Gender == 'Male'] <- "M"
demoKeep$Gender[demoKeep$Gender == 'Female'] <- "F"
ambig <- read.csv("./AdultVersion/ADULTAmbigRaw.csv")
ambig <- read.csv("./AdultAmbigRaw.csv")
ambig <- ambig[ambig$Age < 35,]
View(ambig)
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigStart2 <- which(colnames(ambig) == "RA5_1")
ambigEnd2 <- which(colnames(ambig) == "RA1_5")
ambig$PChoseRisk2 <- rowMeans(ambig[,ambigStart2:ambigEnd2]) #ignores 100% win/lose risk
ambigKeep <- ambig[,c("i", "PChoseRisk", "PChoseRisk2", "color", "RA3_3")]
ambigKeep <- ambig[,c("i", "PChoseRisk", "PChoseRisk2", "RA3_3")]
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigKeep <- ambig[,c("i", "PChoseRisk", "PChoseRisk2", "RA3_3")]
adultData <- merge(ambigKeep, demoKeep, by="i", sort=T)
rm(list = ls())
require(ggplot2)
require(grid)
require(dplyr)
demo <- read.csv("./AdultDemo.csv", stringsAsFactors = F)
demo$DOB <- as.Date(demo$QID2_TEXT, '%m/%d/%y')
demo$Date <- as.Date(demo$startDate, '%m/%d/%y')
demo$age <- as.numeric(difftime(demo$Date, demo$DOB, units = "days"))/365.25
names(demo)[names(demo) == 'QID1_TEXT'] <- 'i'
names(demo)[names(demo) == 'QID3'] <- 'Gender'
demoKeep <- demo[,c("i", "age", "Gender")]
demoKeep$Gender[demoKeep$Gender == 'Male'] <- "M"
demoKeep$Gender[demoKeep$Gender == 'Female'] <- "F"
ambig <- read.csv("./AdultAmbigRaw.csv")
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigKeep <- ambig[,c("i", "PChoseRisk", "PChoseRisk2", "RA3_3")]
ambigKeep <- ambig[,c("i", "PChoseRisk", "RA3_3")]
adultData <- merge(ambigKeep, demoKeep, by="i", sort=T)
adultData$group <- "Adult"
require(reshape2)
ambigStairs <- ambig[,c(ambigEnd:ambigStart)]
ambigStairs <- ambigStairs[with(ambigStairs, order(RA0_6, RA1_5, RA2_4, RA3_3, RA4_2, RA5_1, RA6_0)),]
colnames(ambigStairs) <- c("0/6", "1/6", "2/6", "3/6", "4/6", "5/6", "6/6")
ambigStairs <- ambigStairs == 1
row.names(ambigStairs) <- 32:1
test.m <- melt(ambigStairs)
p <- ggplot(test.m, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "black"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=12)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
ggtitle("All adults, all trials") + theme(plot.title=element_text(face="bold", size=16)) +
labs(x="P(Risk)", y="Participant Number") + theme(axis.title=element_text(size=12)) +
theme(axis.text=element_text(size=10)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))
print(p)
ambig4logit <- ambig[,ambigStart:ambigEnd]
colnames(ambig4logit) <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
ambig4logit <- melt(ambig4logit)
colnames(ambig4logit) <- c("PRisk", "ChoseRisk")
adultAmbig4logit <- ambig4logit
adultAmbig4logit$group <- "Adult"
adultAmbigAtt <- data.frame(colMeans(ambig[,ambigStart:ambigEnd]))
colnames(adultAmbigAtt) <- "PropChoseRisk"
adultAmbigAtt$PRisk <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
adultAmbigAtt <- data.frame(adultAmbigAtt)
adultAmbigAtt$group <- "adult"
p <- ggplot(adultAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() + theme_classic() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme(plot.title = element_text(face="bold", size = 16)) + ggtitle("Adults: Proportion chose risky by P(Risk)") +
theme(axis.title=element_text(size=12)) + theme(axis.text=element_text(size=10))
print(p)
require(gtable)
test.m2 <- test.m
p1 <- ggplot(test.m2, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "grey70"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=20)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
labs(x="Risky P(Win)", y="Adult participant number") + theme(axis.title=element_text(size=28)) +
theme(axis.text=element_text(size=24)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))+ theme(plot.margin = unit(c(1,2,1,2), "lines"))
p2 <- ggplot(adultAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme_classic() %+replace% theme(panel.background = element_rect(fill = NA)) +
theme(axis.title.y=element_text(angle = 270)) +
theme(axis.title=element_text(size=28)) + theme(axis.text=element_text(size=24)) +
labs(y = "Proportion chose risky")
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
grid.draw(g)
grid.draw(g)
demo <- read.csv("./KidDemographics.csv")
demo$DOB <- as.Date(demo$DOB, '%m/%d/%y')
demo$Date <- as.Date(demo$Date, '%m/%d/%y')
demo$age <- as.numeric(difftime(demo$Date, demo$DOB, units = "days"))/365.25
demoKeep <- demo[,c("i", "age", "Gender")]
ambig <- read.csv("./KidAmbigRaw.csv")
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigStart2 <- which(colnames(ambig) == "RA5_1")
ambigEnd2 <- which(colnames(ambig) == "RA1_5")
ambig$PChoseRisk2 <- rowMeans(ambig[,ambigStart2:ambigEnd2]) #ignores 100% win/lose risk
ambigKeep <- ambig[,c("i", "PChoseRisk", "PChoseRisk2", "color", "RA3_3")]
ambigKeep <- ambig[,c("i", "PChoseRisk", "color", "RA3_3")]
ambigKeep <- ambig[,c("i", "PChoseRisk", "color", "RA3_3")]
ambig <- read.csv("./KidAmbigRaw.csv")
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigKeep <- ambig[,c("i", "PChoseRisk", "color", "RA3_3")]
View(ambig)
ambigKeep <- ambig[,c("i", "PChoseRisk", "RA3_3")]
kidData <- merge(ambigKeep, demoKeep, by="i", sort=T)
fails <- ambig$P3 == 0
ambig <- ambig[!fails,]
kidData <- kidData[!fails,]
kidData$group <- "Kid"
bothGroups <- rbind(adultData, kidData)
ambig4logit <- ambig[,ambigStart:ambigEnd]
colnames(ambig4logit) <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
ambig4logit <- melt(ambig4logit)
colnames(ambig4logit) <- c("PRisk", "ChoseRisk")
kidAmbigAtt <- data.frame(colMeans(ambig[,ambigStart:ambigEnd]))
colnames(kidAmbigAtt) <- "PropChoseRisk"
kidAmbigAtt$PRisk <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
kidAmbigAtt <- data.frame(kidAmbigAtt)
kidAmbigAtt$group <- "kid"
kidAmbig4logit <- ambig4logit
kidAmbig4logit$group <- "Kid"
allLogit <- rbind(adultAmbig4logit, kidAmbig4logit)
allAmbigAtt <- rbind(adultAmbigAtt, kidAmbigAtt)
t.test(adultData$PChoseRisk, kidData$PChoseRisk, var.equal = T, alternative = "greater")
t.test(adultData$PChoseRisk, mu = .5, alternative = "greater")
t.test(kidData$PChoseRisk, mu = .5, alternative = "greater")
fisher.test(rbind(c(sum(adultData$RA3_3), length(adultData$RA3_3) - sum(adultData$RA3_3)), c(sum(kidData$RA3_3), length(kidData$RA3_3) - sum(kidData$RA3_3))), alternative = "greater")
binom.test(sum(adultData$RA3_3), length(adultData$RA3_3), alternative = "greater")
binom.test(sum(kidData$RA3_3), length(kidData$RA3_3), alternative = "greater")
rm(list = ls())
require(ggplot2)
require(grid)
require(dplyr)
ambig <- read.csv("./AdultAmbigRaw.csv")
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigKeep <- ambig[,c("i", "PChoseRisk", "RA3_3")]
ambigKeep <- ambig[,c("PChoseRisk", "RA3_3")]
View(ambigKeep)
ambig <- read.csv("./AdultAmbigRaw.csv")
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigKeep <- ambig[,c("PChoseRisk", "RA3_3")]
View(ambig)
ambigStairs <- ambig[,c(ambigEnd:ambigStart)]
ambigStairs <- ambigStairs[with(ambigStairs, order(RA0_6, RA1_5, RA2_4, RA3_3, RA4_2, RA5_1, RA6_0)),]
colnames(ambigStairs) <- c("0/6", "1/6", "2/6", "3/6", "4/6", "5/6", "6/6")
ambigStairs <- ambigStairs == 1
row.names(ambigStairs) <- 32:1
test.m <- melt(ambigStairs)
p <- ggplot(test.m, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "black"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=12)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
ggtitle("All adults, all trials") + theme(plot.title=element_text(face="bold", size=16)) +
labs(x="P(Risk)", y="Participant Number") + theme(axis.title=element_text(size=12)) +
theme(axis.text=element_text(size=10)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))
print(p)
ambig4logit <- ambig[,ambigStart:ambigEnd]
colnames(ambig4logit) <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
ambig4logit <- melt(ambig4logit)
colnames(ambig4logit) <- c("PRisk", "ChoseRisk")
adultAmbig4logit <- ambig4logit
adultAmbig4logit$group <- "Adult"
adultAmbigAtt <- data.frame(colMeans(ambig[,ambigStart:ambigEnd]))
colnames(adultAmbigAtt) <- "PropChoseRisk"
adultAmbigAtt$PRisk <- c("6/6", "5/6", "4/6", "3/6", "2/6", "1/6", "0/6")
adultAmbigAtt <- data.frame(adultAmbigAtt)
adultAmbigAtt$group <- "adult"
p <- ggplot(adultAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() + theme_classic() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme(plot.title = element_text(face="bold", size = 16)) + ggtitle("Adults: Proportion chose risky by P(Risk)") +
theme(axis.title=element_text(size=12)) + theme(axis.text=element_text(size=10))
print(p)
require(gtable)
test.m2 <- test.m
p1 <- ggplot(test.m2, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_manual(values = c("grey90", "grey70"), labels=c("Chose ambiguous", "Chose risky")) +
theme_classic() +
theme(legend.title=element_blank()) + theme(legend.text=element_text(size=20)) +
theme(legend.position = c(0.06,0.94)) + theme(legend.justification = c(0,1)) +
labs(x="Risky P(Win)", y="Adult participant number") + theme(axis.title=element_text(size=28)) +
theme(axis.text=element_text(size=24)) +
scale_y_continuous(breaks=c(1,5,10,15,20,25,30))+ theme(plot.margin = unit(c(1,2,1,2), "lines"))
p2 <- ggplot(adultAmbigAtt, aes(x=PRisk, y=PropChoseRisk)) + geom_point() +
stat_smooth(data = ambig4logit, aes(group = 1, y = ChoseRisk), method="glm", method.args = list(family="binomial")) +
theme_classic() %+replace% theme(panel.background = element_rect(fill = NA)) +
theme(axis.title.y=element_text(angle = 270)) +
theme(axis.title=element_text(size=28)) + theme(axis.text=element_text(size=24)) +
labs(y = "Proportion chose risky")
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
grid.draw(g)
rm(list = ls())
ambig <- read.csv("./KidAmbigRaw.csv")
ambigStart <- which(colnames(ambig) == "RA6_0")
ambigEnd <- which(colnames(ambig) == "RA0_6")
ambig$PChoseRisk <- rowMeans(ambig[,ambigStart:ambigEnd])
ambigStart2 <- which(colnames(ambig) == "RA5_1")
ambigEnd2 <- which(colnames(ambig) == "RA1_5")
ambig$PChoseRisk2 <- rowMeans(ambig[,ambigStart2:ambigEnd2]) #ignores 100% win/lose risk
ambigKeep <- ambig[,c("i", "PChoseRisk")]
View(ambig)
ambigKeep <- ambig[,c("PChoseRisk", "RA3_3")]
View(ambigKeep)
View(ambig)
fails <- ambig$P3 == 0
ambig <- ambig[!fails,]
allData <- ambig[!fails,]
View(allData)
